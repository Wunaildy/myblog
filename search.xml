<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>se</title>
      <link href="/myblog/2022/08/12/se/"/>
      <url>/myblog/2022/08/12/se/</url>
      
        <content type="html"><![CDATA[<p><img src="https://s2.loli.net/2022/08/12/a7wpIO9EXJBRhxS.png" alt="image-20220812161535875"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python爬虫日记</title>
      <link href="/myblog/2022/08/12/hello-world/"/>
      <url>/myblog/2022/08/12/hello-world/</url>
      
        <content type="html"><![CDATA[<p>本文是python爬虫学习的常规笔记，由浅至深的探索爬虫。</p><h2 id="🚩python基础"><a href="#🚩python基础" class="headerlink" title="🚩python基础"></a>🚩python基础</h2><h3 id="✏️python注释"><a href="#✏️python注释" class="headerlink" title="✏️python注释"></a>✏️python注释</h3><p>python注释分为单行注释与多行注释</p><ul><li><p>单行注释以“#”开头，例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是一个python注释</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello world!&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>多行注释用三个单引号（’’’）或者三个双引号（”””）括起来，例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">这是python的多行注释</span></span><br><span class="line"><span class="string">这里使用的单引号</span></span><br><span class="line"><span class="string">下面是第一个python程序</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello world!&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">这是python的多行注释</span></span><br><span class="line"><span class="string">这里使用的双引号</span></span><br><span class="line"><span class="string">下面是第一个python程序</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello world!&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>在书写类或者函数的时候，一定要写上对应的注释，这里推荐使用Sphinx风格的注释：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    :paramz name: 姓名</span></span><br><span class="line"><span class="string">    :param age: 年龄</span></span><br><span class="line"><span class="string">    :param favorite_color: 最喜欢的颜色</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age, favorite_color</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line">        self.favorite_color = favorite_color</span><br></pre></td></tr></table></figure></li></ul><h3 id="✏️数据类型"><a href="#✏️数据类型" class="headerlink" title="✏️数据类型"></a>✏️数据类型</h3><p>在python中，所有的变量初始不需要声明，但在使用前必须对变量赋值。</p><p>python中标准的数据类型有：</p><ul><li>Number（数字）</li><li>String（字符串）</li><li>List（列表）</li><li>Tuple（元组）</li><li>Set（集合）</li><li>Dictionary（字典）</li></ul><h4 id="🍋Number"><a href="#🍋Number" class="headerlink" title="🍋Number"></a>🍋Number</h4><p>Python3 支持 <strong>int、float、bool、complex（复数）</strong></p><p>在Python 3里，只有一种整数类型 int，表示为长整型，没有 python2 中的 Long</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看四种数据的数据类型</span></span><br><span class="line">a, b, c, d, = <span class="number">10</span>, <span class="number">2.2</span>, <span class="literal">True</span>, <span class="number">3</span> + <span class="number">3j</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(b))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(c))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(d))</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/veagong/note/raw/master/img/image-20220810225758660.png" alt="image-20220810225758660"></p><p>需要i特别注意，布尔类型在python中也是Number类型的数据，可以直接参与数字计算。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 布尔类型参与计算</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">1</span>+<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/veagong/note/raw/master/img/image-20220810230008707.png" alt="image-20220810230008707"></p><h4 id="🍋String"><a href="#🍋String" class="headerlink" title="🍋String"></a>🍋String</h4><p>python中字符串用单引号（’ ‘)或者双引号（” “）括起来。</p><p>可通过以下方式来截取字符串：</p><p>变量[头下标: 尾下标]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))  <span class="comment"># 查看字符串的类型</span></span><br><span class="line"><span class="built_in">print</span>(a)        <span class="comment"># 输出字符串</span></span><br><span class="line"><span class="built_in">print</span>(a[<span class="number">1</span>:<span class="number">3</span>])   <span class="comment"># 截取第二到第三个字符</span></span><br><span class="line"><span class="built_in">print</span>(a[<span class="number">1</span>:])    <span class="comment"># 输出第二个到最后一个字符</span></span><br><span class="line"><span class="built_in">print</span>(a * <span class="number">2</span>)    <span class="comment"># 输出字符串两次</span></span><br><span class="line"><span class="built_in">print</span>(a + <span class="string">&#x27;world&#x27;</span>) <span class="comment"># 连接字符串</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/veagong/note/raw/master/img/image-20220810231225584.png" alt="image-20220810231225584"></p><h4 id="🍋List"><a href="#🍋List" class="headerlink" title="🍋List"></a>🍋List</h4><p>列表可以完成大多数集合类的数据结构实现。列表中元素的类型可以不相同，它支持数字，字符串甚至可以包含列表（所谓嵌套）。</p><p>列表中的元素写在[ ]中，以逗号（ , ）隔开。</p><p>列表的操作也可通过以下方式进行：</p><p>变量[头下标: 尾下标]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">11</span>, <span class="string">&#x27;hello&#x27;</span>, <span class="number">12.3</span>, <span class="string">&#x27;你好&#x27;</span>, <span class="number">22</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="built_in">list</span>))  <span class="comment"># 查看列表类型</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>[<span class="number">0</span>])  <span class="comment"># 输出第一个元素</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>[<span class="number">1</span>:<span class="number">4</span>])  <span class="comment"># 输出第一至第四的元素</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>[<span class="number">2</span>:])  <span class="comment"># 输出第二个至最后一个元素</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/veagong/note/raw/master/img/image-20220810231913543.png" alt="image-20220810231913543"></p><p>列表支持元素的添加、删除。</p><ul><li>添加列表元素，使用append()函数来向列表中添加元素。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">11</span>, <span class="string">&#x27;hello&#x27;</span>, <span class="number">12.3</span>, <span class="string">&#x27;你好&#x27;</span>, <span class="number">22</span>]</span><br><span class="line"><span class="built_in">list</span>.append(<span class="string">&#x27;张三&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/veagong/note/raw/master/img/image-20220810232344828.png" alt="image-20220810232344828"></p><ul><li>删除列表元素，使用del来删除指定位置的元素。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span> = [<span class="number">11</span>, <span class="string">&#x27;hello&#x27;</span>, <span class="number">12.3</span>, <span class="string">&#x27;你好&#x27;</span>, <span class="number">22</span>]</span><br><span class="line"><span class="keyword">del</span> <span class="built_in">list</span>[<span class="number">1</span>] <span class="comment"># 删除hello</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/veagong/note/raw/master/img/image-20220810232508584.png" alt="image-20220810232508584"></p><h4 id="🍋Tuple"><a href="#🍋Tuple" class="headerlink" title="🍋Tuple"></a>🍋Tuple</h4><p>python的元组与列表类似，但是元组中的元素不能修改。</p><p>元组使用小括号“ ( ) ”括起来，元组的使用与列表类似，需要注意的是元组中的元素不能被删除，只能删除整个元组。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tup = (<span class="number">1</span>, <span class="string">&#x27;张三&#x27;</span>, <span class="string">&#x27;hello&#x27;</span>, <span class="number">22.2</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(tup))  <span class="comment"># 输出元组类型</span></span><br><span class="line"><span class="built_in">print</span>(tup[<span class="number">2</span>])  <span class="comment"># 输出第三个元组元素</span></span><br><span class="line"><span class="built_in">print</span>(tup[<span class="number">1</span>:<span class="number">3</span>])  <span class="comment"># 输出第二至第三个元素</span></span><br><span class="line"><span class="built_in">print</span>((tup[<span class="number">1</span>:]))  <span class="comment"># 输出第二至最后一个元素</span></span><br><span class="line"><span class="keyword">del</span> tup  <span class="comment"># 删除元组</span></span><br><span class="line"><span class="built_in">print</span>(tup)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/veagong/note/raw/master/img/image-20220811200128415.png" alt="image-20220811200128415"></p><p><img src="https://gitee.com/veagong/note/raw/master/img/image-20220811200204891.png" alt="image-20220811200204891"></p><h4 id="🍋Set"><a href="#🍋Set" class="headerlink" title="🍋Set"></a>🍋Set</h4><p>集合（set）是一个无序的不重复元素序列。</p><p>可以用大括号（{ }）或者set( )函数来创建集合，创建空集合必须使用set( )函数，因为{ }是用来创建空字典的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="string">&#x27;sun&#x27;</span>, <span class="string">&#x27;mon&#x27;</span>, <span class="string">&#x27;tues&#x27;</span>, <span class="number">11</span>&#125;</span><br><span class="line">b = <span class="built_in">set</span>(<span class="string">&#x27;abcdefffff&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(b)  <span class="comment"># 集合有去重功能，去重后为无序列表</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/veagong/note/raw/master/img/image-20220811200602616.png" alt="image-20220811200602616"></p><p>集合之间是可以进行运算的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">set</span>(<span class="string">&#x27;abracadabra&#x27;</span>)</span><br><span class="line">b = <span class="built_in">set</span>(<span class="string">&#x27;alacazam&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a - b)  <span class="comment"># 集合a中包含而集合b中不包含的元素</span></span><br><span class="line"><span class="built_in">print</span>(a | b)  <span class="comment"># 集合a或b中包含的所有元素</span></span><br><span class="line"><span class="built_in">print</span>(a &amp; b)  <span class="comment"># 集合a和b中都包含了的元素</span></span><br><span class="line"><span class="built_in">print</span>(a ^ b)  <span class="comment"># 不同时包含于a和b的元素</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/veagong/note/raw/master/img/image-20220811200624985.png" alt="image-20220811200624985"></p><p>常用的集合操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="built_in">set</span>((<span class="string">&#x27;hello&#x27;</span>, <span class="string">&#x27;world&#x27;</span>, <span class="string">&#x27;nihao&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(s)</span><br><span class="line">s.add(<span class="string">&#x27;ok&#x27;</span>)  <span class="comment"># 添加元素</span></span><br><span class="line"><span class="built_in">print</span>(s)</span><br><span class="line">s.update(&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, &#125;)  <span class="comment"># update可以添加列表</span></span><br><span class="line"><span class="built_in">print</span>(s)</span><br><span class="line">s.remove(<span class="string">&#x27;hello&#x27;</span>)  <span class="comment"># 移除元素</span></span><br><span class="line">s.discard(<span class="string">&#x27;world&#x27;</span>)  <span class="comment"># 移除元素</span></span><br><span class="line"><span class="built_in">print</span>(s)</span><br><span class="line">s.clear()  <span class="comment"># 清空集合</span></span><br><span class="line"><span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/veagong/note/raw/master/img/image-20220811200713087.png" alt="image-20220811200713087"></p><h4 id="🍋Dictionary"><a href="#🍋Dictionary" class="headerlink" title="🍋Dictionary"></a>🍋Dictionary</h4><p>字典是python中一种可变容器，可以存储任意类型的对象。</p><p>字典用花括号（{ }）括起来，内部以key:value进行组合，每个组合间以逗号( , )隔开。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dict1 = &#123;</span><br><span class="line">    <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;piter&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;age&#x27;</span>: <span class="number">21</span>,</span><br><span class="line">    <span class="string">&#x27;country&#x27;</span>: <span class="string">&#x27;US&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;like&#x27;</span>: <span class="string">&#x27;basketball&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>字典里的元素是可以修改的，字典的常用使用如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(dict1)  <span class="comment"># 打印字典内容</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(dict1))  <span class="comment"># 打印字典类型</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(dict1))  <span class="comment"># 查看字典数量</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;name:&#x27;</span>, dict1[<span class="string">&#x27;name&#x27;</span>])  <span class="comment"># 访问字典里name的值</span></span><br><span class="line">dict1[<span class="string">&#x27;country&#x27;</span>] = <span class="string">&#x27;JP&#x27;</span>  <span class="comment"># 修改字典里元素值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;country:&#x27;</span>, dict1[<span class="string">&#x27;country&#x27;</span>])  <span class="comment"># 查看修改结果</span></span><br><span class="line"><span class="keyword">del</span> dict1[<span class="string">&#x27;like&#x27;</span>]  <span class="comment"># 删除字典元素</span></span><br><span class="line"><span class="built_in">print</span>(dict1)</span><br><span class="line">dict1.clear()  <span class="comment"># 清空字典</span></span><br><span class="line"><span class="built_in">print</span>(dict1)</span><br><span class="line"><span class="keyword">del</span> dict1  <span class="comment"># 删除字典</span></span><br><span class="line"><span class="built_in">print</span>(dict1)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/veagong/note/raw/master/img/image-20220811200354418.png" alt="image-20220811200354418"></p><p><img src="https://gitee.com/veagong/note/raw/master/img/image-20220811200409571.png" alt="image-20220811200409571"></p><h3 id="✏️条件控制语句——if"><a href="#✏️条件控制语句——if" class="headerlink" title="✏️条件控制语句——if"></a>✏️条件控制语句——if</h3><p>if条件控制语句用来控制代码块是否执行，在其他语言中常见的if else if 在python中被代替为if elif。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 表达式<span class="number">1</span>:</span><br><span class="line">执行语句</span><br><span class="line"><span class="keyword">elif</span> 表达式<span class="number">2</span>:</span><br><span class="line">执行语句</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">执行语句</span><br></pre></td></tr></table></figure><p>eg：输入学生成绩score，如果大于等于90评级为A，80-90评级为B，60-80评级为C，小于60评级为D。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">score = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入学生成绩：&#x27;</span>))</span><br><span class="line"><span class="keyword">if</span> score &gt;= <span class="number">90</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;A&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> score &gt;= <span class="number">80</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;B&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> score &gt;= <span class="number">60</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;C&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> score &gt;= <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;D&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;成绩有误&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="✏️循环语句"><a href="#✏️循环语句" class="headerlink" title="✏️循环语句"></a>✏️循环语句</h3><p>python中的循环语句有for循环与while循环。</p><h4 id="🍋for循环"><a href="#🍋for循环" class="headerlink" title="🍋for循环"></a>🍋for循环</h4><p>for循环常用格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> &lt;variable&gt; <span class="keyword">in</span> &lt;sequence&gt;:</span><br><span class="line">    &lt;statements&gt;</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    &lt;statements&gt;</span><br></pre></td></tr></table></figure><p>eg:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">index = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> index:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/veagong/note/raw/master/img/image-20220811223701062.png" alt="image-20220811223701062"></p><ul><li>使用break可以当前的循环:</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">index = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;D&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> index:</span><br><span class="line">    <span class="keyword">if</span> i == <span class="string">&#x27;B&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;遇见B跳出循环&#x27;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;正常循环：&#x27;</span>+ i)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/veagong/note/raw/master/img/image-20220811224111685.png" alt="image-20220811224111685"></p><ul><li>使用continue可以跳出当此循环执行下次循环</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> index:</span><br><span class="line">    <span class="keyword">if</span> i == <span class="string">&#x27;B&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;不输出B&#x27;</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;正常输出：&#x27;</span> + i)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/veagong/note/raw/master/img/image-20220811224837535.png" alt="image-20220811224837535"></p><ul><li>使用rang()函数可以便利序列：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(index)):</span><br><span class="line">    <span class="built_in">print</span>(index[i])</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/veagong/note/raw/master/img/image-20220811224343771.png" alt="image-20220811224343771"></p><h4 id="🍋while循环"><a href="#🍋while循环" class="headerlink" title="🍋while循环"></a>🍋while循环</h4><p>while循环常用格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> condition：</span><br><span class="line">statement</span><br></pre></td></tr></table></figure><p>eg:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line"><span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> a &lt; <span class="number">10</span>:</span><br><span class="line">    <span class="built_in">sum</span> = <span class="built_in">sum</span> + a</span><br><span class="line">    a += <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;1到10的和为：&#x27;</span> + <span class="built_in">str</span>(<span class="built_in">sum</span>))</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/08/12/RaPUlutdcI1QbCL.png" alt="image-20220812115514339"></p><h2 id="🚩网页源码解析"><a href="#🚩网页源码解析" class="headerlink" title="🚩网页源码解析"></a>🚩网页源码解析</h2><h3 id="✏️正则表达式"><a href="#✏️正则表达式" class="headerlink" title="✏️正则表达式"></a>✏️正则表达式</h3><h3 id="✏️BeautifulSoup"><a href="#✏️BeautifulSoup" class="headerlink" title="✏️BeautifulSoup"></a>✏️BeautifulSoup</h3><h3 id="✏️xpath"><a href="#✏️xpath" class="headerlink" title="✏️xpath"></a>✏️xpath</h3><h2 id="🚩requests库"><a href="#🚩requests库" class="headerlink" title="🚩requests库"></a>🚩requests库</h2><h2 id="🚩selenium库"><a href="#🚩selenium库" class="headerlink" title="🚩selenium库"></a>🚩selenium库</h2><h2 id="🚩scrapy框架"><a href="#🚩scrapy框架" class="headerlink" title="🚩scrapy框架"></a>🚩scrapy框架</h2><h2 id="🚩文件相关"><a href="#🚩文件相关" class="headerlink" title="🚩文件相关"></a>🚩文件相关</h2><h2 id="🚩多进程与多线程"><a href="#🚩多进程与多线程" class="headerlink" title="🚩多进程与多线程"></a>🚩多进程与多线程</h2><h2 id="🚩pandas库"><a href="#🚩pandas库" class="headerlink" title="🚩pandas库"></a>🚩pandas库</h2><h2 id="🚩数据库相关"><a href="#🚩数据库相关" class="headerlink" title="🚩数据库相关"></a>🚩数据库相关</h2><h2 id="🚩IP代理"><a href="#🚩IP代理" class="headerlink" title="🚩IP代理"></a>🚩IP代理</h2><h2 id="🚩cookie使用"><a href="#🚩cookie使用" class="headerlink" title="🚩cookie使用"></a>🚩cookie使用</h2><h2 id="🚩Ajax动态网页"><a href="#🚩Ajax动态网页" class="headerlink" title="🚩Ajax动态网页"></a>🚩Ajax动态网页</h2><h2 id="🚩反爬应对"><a href="#🚩反爬应对" class="headerlink" title="🚩反爬应对"></a>🚩反爬应对</h2>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
